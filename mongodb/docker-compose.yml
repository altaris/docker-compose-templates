# mongo-express     -> http://mongo.localhost
# traefik dashboard -> http://traefik.localhost

volumes:
  mongo-conf:
  mongo-data:

services:
  mongo:
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    image: mongo
    volumes:
      - mongo-conf:/data/configdb
      - mongo-data:/data/db
  mongo-express:
    depends_on:
      - mongo
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: ${ME_CONFIG_BASICAUTH_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${ME_CONFIG_BASICAUTH_PASSWORD}
      # ME_CONFIG_MONGODB_ENABLE_ADMIN: false
      # ME_CONFIG_MONGODB_AUTH_DATABASE:
      # ME_CONFIG_MONGODB_AUTH_USERNAME: ${ME_CONFIG_MONGODB_AUTH_USERNAME}
      # ME_CONFIG_MONGODB_AUTH_PASSWORD: ${ME_CONFIG_MONGODB_AUTH_PASSWORD}
      ME_CONFIG_MONGODB_ENABLE_ADMIN: true
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_SERVER: mongo
    image: mongo-express
    labels:
      traefik.http.services.mongo-express.loadbalancer.server.port: 8081
      traefik.http.routers.mongo-express-http.rule: Host(`mongo.localhost`)
    ports:
      - 8080:8081
    # mongo-express fails if it can't reach mongo immediately
    restart: on-failure:5
  traefik:
    image: traefik
    labels:
      traefik.http.routers.traefik-http.service: api@internal
      traefik.http.routers.traefik-http.rule: Host(`traefik.localhost`)
      traefik.http.services.traefik.loadbalancer.server.port: 8080
    ports:
      - 80:80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.yml:/etc/traefik/traefik.yml:ro
