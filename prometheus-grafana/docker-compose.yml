# grafana           -> http://grafana.localhost
# traefik dashboard -> http://traefik.localhost

version: "3.5"

volumes:
  grafana-data:
  prometheus-data:

networks:
  monitor:

services:
  exporter-host:
    container_name: exporter-host
    image: prom/node-exporter-linux-armv7
    networks:
      - monitor
    restart: on-failure:5
    security_opt:
      - no-new-privileges
    volumes:
      - /:/rootfs:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
  grafana:
    container_name: grafana
    depends_on:
      - prometheus
    environment:
      - GF_USERS_ALLOW_SIGN_UP=false
    image: grafana/grafana
    labels:
      traefik.http.services.grafana.loadbalancer.server.port: 3000
      traefik.http.routers.grafana-http.rule: Host(`redis.localhost`)
    networks:
      - monitor
    ports:
      - 9000:3000
    restart: on-failure:5
    security_opt:
      - no-new-privileges
    volumes:
      - ./conf/grafana:/etc/grafana
      - grafana-data:/var/lib/grafana
  prometheus:
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention=720h"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--web.enable-lifecycle"
    container_name: prometheus
    depends_on:
      - exporter-host
    image: prom/prometheus #Â See also https://hub.docker.com/u/prom
    networks:
      - monitor
    restart: on-failure:5
    security_opt:
      - no-new-privileges
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
  traefik:
    image: traefik
    labels:
      traefik.http.routers.traefik-http.service: api@internal
      traefik.http.routers.traefik-http.rule: Host(`traefik.localhost`)
      traefik.http.services.traefik.loadbalancer.server.port: 8080
    ports:
      - 80:80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.yml:/etc/traefik/traefik.yml:ro
