# redis-commander   -> http://redis.localhost
# traefik dashboard -> http://traefik.localhost

volumes:
  redis-data:

services:
  redis:
    # For persistence
    #Â command: ["redis-server", "--save", "60", "1"]
    image: redis
    volumes:
      - redis-data:/data
  redis-commander:
    depends_on:
      - redis
    environment:
      REDIS_HOSTS: local:redis:6379
    # To let traefik detect the container immediately, see also
    # https://community.traefik.io/t/service-router-only-registers-after-long-delay/10278/1
    healthcheck:
      disable: true
    image: ghcr.io/joeferner/redis-commander
    labels:
      traefik.http.services.redis-commander.loadbalancer.server.port: 8081
      traefik.http.routers.redis-commander-http.rule: Host(`redis.localhost`)
    ports:
      - 8081:8081
    restart: on-failure:5
  traefik:
    image: traefik
    labels:
      traefik.http.routers.traefik-http.service: api@internal
      traefik.http.routers.traefik-http.rule: Host(`traefik.localhost`)
      traefik.http.services.traefik.loadbalancer.server.port: 8080
    ports:
      - 80:80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.yml:/etc/traefik/traefik.yml:ro
